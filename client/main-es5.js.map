{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.moudle.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/notauth.guard.ts","webpack:///src/app/components/blog/blog.component.ts","webpack:///src/app/components/blog/blog.component.html","webpack:///src/app/components/blog/delete-blog/delete-blog.component.ts","webpack:///src/app/components/blog/delete-blog/delete-blog.component.html","webpack:///src/app/components/blog/edit-blog/edit-blog.component.ts","webpack:///src/app/components/blog/edit-blog/edit-blog.component.html","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/public-profile/public-profile.component.ts","webpack:///src/app/components/public-profile/public-profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/blog.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","appRoutes","path","component","canActivate","AppRoutingModule","forRoot","declarations","imports","providers","bootstrap","AppComponent","title","selector","templateUrl","styleUrls","AppModule","AuthGuard","authService","router","state","loggedIn","redirectUrl","url","navigate","providedIn","NotAuthGuard","BlogComponent","formBuilder","blogService","location1","newPost","loadingBlogs","processing","newComment","enabledComments","createNewBlogForm","createCommentForm","form","group","compose","required","maxLength","minLength","alphaNumericValidation","body","commentForm","comment","get","enable","disable","controls","regExp","RegExp","test","value","reset","getAllBlogs","setTimeout","push","index","indexOf","splice","enableCommentForm","disableFormNewBlogForm","blog","createdBy","username","newBlog","subscribe","data","success","messageClass","message","enableFormNewBlogForm","window","location","reload","blogPosts","blogs","likeBlog","dislikeBlog","disableCommentForm","postComment","expand","getProfile","profile","user","DeleteBlogComponent","activatedRoute","foundBlog","deleteBlog","currentUrl","snapshot","params","getSingleBlog","createdAt","EditBlogComponent","String","loading","editBlog","back","DashboardComponent","HomeComponent","LoginComponent","authGuard","createForm","password","disableForm","login","enableForm","storeUserData","token","previousUrl","undefined","onLoginSubmit","NavbarComponent","logOut","ProfileComponent","email","PublicProfileComponent","foundProfile","getPublicProfile","RegisterComponent","validateEmail","validateUsername","validatePassword","confirmpassword","validator","matchingPasswords","registerUser","console","log","checkUsername","usernameValid","usernameMessage","checkEmail","emailValid","emailMessage","onRegisterSubmit","AuthService","http","domain","helper","loadToken","options","headers","authToken","localStorage","getItem","post","clear","alert","setItem","JSON","stringify","createAuthenticationHeaders","isTokenExpired","BlogService","put","blogData","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import{ RouterModule ,Routes} from '@angular/router';\r\nimport{ NgModule, Component} from '@angular/core';\r\nimport{HomeComponent} from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport{ RegisterComponent} from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport {AuthGuard} from './auth/auth.guard';\r\nimport {NotAuthGuard} from './auth/notauth.guard';\r\nimport { BlogComponent } from './components/blog/blog.component';\r\nimport { EditBlogComponent } from './components/blog/edit-blog/edit-blog.component';\r\nimport { DeleteBlogComponent } from './components/blog/delete-blog/delete-blog.component';\r\nimport { PublicProfileComponent } from './components/public-profile/public-profile.component';\r\n\r\nconst appRoutes: Routes=[\r\n  {path:'',\r\n   component:HomeComponent\r\n  },\r\n  {\r\n    path:'register',\r\n    component:RegisterComponent,\r\n    canActivate:[NotAuthGuard]\r\n  },\r\n  {\r\n    path:'login',\r\n    component:LoginComponent,\r\n    canActivate:[NotAuthGuard]\r\n  },\r\n  {\r\n    path:'profile',\r\n    component:ProfileComponent,\r\n    canActivate:[AuthGuard],\r\n    \r\n  },\r\n  {\r\n    path:'blog',\r\n    component:BlogComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'dashboard',\r\n    component:DashboardComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'edit-blog/:id',\r\n    component:EditBlogComponent,\r\n    canActivate:[AuthGuard]\r\n\r\n  },{\r\n    path:'delete-blog/:id',\r\n    component:DeleteBlogComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'user/:username',\r\n    component:PublicProfileComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {path:'**',component: HomeComponent}\r\n];\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [RouterModule.forRoot(appRoutes)],\r\n    providers: [],\r\n    bootstrap: [],\r\n    exports: [RouterModule]\r\n  })\r\n  export class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport{ FormsModule} from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.moudle';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AuthService} from './services/auth.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport {AuthGuard} from './auth/auth.guard';\nimport {NotAuthGuard} from './auth/notauth.guard';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { BlogService } from './services/blog.service';\nimport { from } from 'rxjs';\nimport { EditBlogComponent } from './components/blog/edit-blog/edit-blog.component';\nimport { DeleteBlogComponent } from './components/blog/delete-blog/delete-blog.component';\nimport { PublicProfileComponent } from './components/public-profile/public-profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    DashboardComponent,\n    RegisterComponent,\n    LoginComponent,\n    ProfileComponent,\n    BlogComponent,\n    EditBlogComponent,\n    DeleteBlogComponent,\n    PublicProfileComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    \n    \n  ],\n  providers: [AuthService,AuthGuard,NotAuthGuard,BlogService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree,Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  redirectUrl;\n\n\n  constructor(private authService:AuthService,private router:Router){}\n  canActivate(\n    router:ActivatedRouteSnapshot,\n    state:RouterStateSnapshot\n  ){\n    if(this.authService.loggedIn()){\n      return true;\n    }\n    else{\n      this.redirectUrl=state.url;\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate,Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotAuthGuard implements CanActivate {\r\n  constructor(private authService:AuthService,private router:Router){}\r\n  canActivate(){\r\n    if(this.authService.loggedIn()){\r\n        this.router.navigate(['/']);\r\n        return false;\r\n    }\r\n    else{\r\n      \r\n      return true;\r\n    }\r\n\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators, RequiredValidator} from '@angular/forms';\nimport {AuthService } from '../../services/auth.service';\nimport { BlogService } from '../../services/blog.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n  messageClass;\n  message;\n  newPost=false;\n  loadingBlogs=false;\n  form:FormGroup;\n  formControlName:FormControl;\n  processing=false;\n  username;\n  blogPosts;\n  newComment=[];\n  commentForm:FormGroup;\n  enabledComments=[];\n\n\n  constructor(\n    private formBuilder:FormBuilder,\n    private authService:AuthService,\n    private blogService:BlogService,\n    private location1:Location\n  ) { \n    this.createNewBlogForm();\n    this.createCommentForm();\n  }\n\n  createNewBlogForm() {\n    this.form = this.formBuilder.group({\n      title: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(50),\n        Validators.minLength(5),\n        this.alphaNumericValidation\n      ])],\n      body: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(10000),\n        Validators.minLength(5)\n      ])]\n    })\n  }\n\n  createCommentForm() {\n    this.commentForm = this.formBuilder.group({\n      comment: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(200)\n      ])]\n    })\n  }\n\n  enableCommentForm() {\n    this.commentForm.get('comment').enable();\n  }\n\n\n  disableCommentForm() {\n    this.commentForm.get('comment').disable();\n  }\n  enableFormNewBlogForm(){\n    this.form.get('title').enable();\n    this.form.get('body').enable();\n  }\n\n  disableFormNewBlogForm(){\n    this.form.get('title').disable();\n    this.form.get('body').disable();\n\n  }\n\n  alphaNumericValidation(controls){\n    const regExp = new RegExp(/^[a-zA-Z0-9 ]*$/);\n    if(regExp.test(controls.value)){\n      return null;\n    }\n    else{\n      return {'alphaNumericValidation':true};\n    }\n\n  }\n\n  newBlogForm(){\n    this.form.reset();\n    this.newPost=true;\n  }\n  \n  reloadBlog(){\n    this.loadingBlogs=true;\n    this.getAllBlogs();\n    setTimeout(() => {\n      this.loadingBlogs=false;\n    },4000);\n  }\n\n  draftComment(id) {\n    this.commentForm.reset();\n    this.newComment = []; \n    this.newComment.push(id); \n  }\n\n\n  cancelSubmission(id) {\n    const index = this.newComment.indexOf(id);\n    this.newComment.splice(index, 1); \n    this.commentForm.reset();\n    this.enableCommentForm();\n    this.processing = false;\n  }\n  onBlogSubmit(){\n    this.processing=true;\n    this.disableFormNewBlogForm();\n\n    const blog={\n      title:this.form.get('title').value,\n      body:this.form.get('body').value,\n      createdBy:this.username,\n    }\n\n    this.blogService.newBlog( blog ).subscribe((data:any)=>{\n      if(!data.success){\n        this.messageClass='alert alert-danger';\n        this.message=data.message;\n        this.processing=false;\n        this.enableFormNewBlogForm();\n      }\n      else{\n        this.messageClass='alert alert-success';\n        this.message=data.message;\n        this.getAllBlogs();\n        setTimeout(() => {\n          this.newPost=false;\n          this.processing=false;\n          this.message=false;\n          this.form.reset;  \n          this.enableFormNewBlogForm();\n        }, 2000);\n      }\n    });\n  }\n  goBack(){\n    window.location.reload();\n  }\n\n  getAllBlogs(){\n    this.blogService.getAllBlogs().subscribe((data:any)=>{\n      this.blogPosts=data.blogs;\n    });\n  }\n\n  likeBlog(id) {\n    this.blogService.likeBlog(id).subscribe((data:any) => {\n      this.getAllBlogs();\n    });\n  }\n\n  dislikeBlog(id) {\n    this.blogService.dislikeBlog(id).subscribe((data:any) => {\n      this.getAllBlogs();\n    });\n  }\n  postComment(id) {\n    this.disableCommentForm(); \n    this.processing = true; \n    const comment = this.commentForm.get('comment').value; \n    this.blogService.postComment(id, comment).subscribe(data => {\n      this.getAllBlogs();\n      const index = this.newComment.indexOf(id);\n      this.newComment.splice(index, 1);\n      this.enableCommentForm(); \n      this.commentForm.reset();\n      this.processing = false;\n      if (this.enabledComments.indexOf(id) < 0) this.expand(id);\n    });\n  }\n\n\n  expand(id){\n    this.enabledComments.push(id);\n  }\n\n  collapse(id){\n    const index=this.enabledComments.indexOf(id);\n    this.enabledComments.splice(index, 1);\n  }\n\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe((profile:any)=>{\n      this.username=profile.user.username;\n    });\n    this.getAllBlogs();\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n</head>\n<style>\n    .mydiv{\n    width:100%;\n    margin: auto 0;\n    }\n   </style>\n<body>\n\n\n<h1 class=\"page-header\">Blog Feed</h1>\n\n<div class=\"row show-hide-message\" *ngIf=\"message && newPost\">\n  <div [ngClass]=\"messageClass\" class=\"mydiv\">\n    {{ message }}\n  </div>\n</div>\n\n<button style=\"margin:5px;\" type=\"button\" name=\"button\" class=\"btn btn-warning\" *ngIf=\"!newPost\" (click)=\"newBlogForm()\">New Post</button>\n\n<button style=\"margin:5px;\" [disabled]=\"loadingBlogs\" type=\"button\" name=\"button\" class=\"btn btn-default\" *ngIf=\"!newPost\" (click)=\"reloadBlog()\"><span class=\"glyphicon glyphicon-repeat\"></span>&nbsp;&nbsp;Reload</button>\n\n<br />\n<br />\n<form [formGroup]=\"form\" name=\"blogForm\" (submit)=\"onBlogSubmit()\" *ngIf=\"newPost\">\n  <div class=\"form-group\">\n    <label for=\"title\">Title</label>\n    <div >\n      <input type=\"text\" name=\"title\" class=\"form-control\" placeholder=\"*Blog Title\" autocomplete=\"off\" formControlName=\"title\" [ngClass]=\"{'is-valid': form.controls.title.valid, 'is-invalid': form.controls.title.dirty && form.controls.title.errors}\"/>\n      <ul class=\"help-block\">\n        <li *ngIf=\"form.controls.title.dirty && form.controls.title.errors?.required\">This field is required.</li>\n        <li *ngIf=\"(form.controls.title.dirty && form.controls.title.errors?.minlength) || (form.controls.title.dirty && form.controls.title.errors?.maxlength)\">Max length: 50, Min length: 5</li>\n        <li *ngIf=\"form.controls.title.dirty && form.controls.title.errors?.alphaNumericValidation\">Must be a letter or number</li>\n      </ul>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"body\">Body</label>\n    <div >\n      <textarea name=\"body\" rows=\"8\" cols=\"80\" placeholder=\"*Body\" class=\"form-control\" formControlName=\"body\" [ngClass]=\"{'is-valid': form.controls.body.valid, 'is-invalid': form.controls.body.dirty && form.controls.body.errors}\"></textarea>\n      <ul class=\"help-block\">\n        <li *ngIf=\"form.controls.body.dirty && form.controls.body.errors?.required\">This field is required.</li>\n        <li *ngIf=\"(form.controls.body.dirty && form.controls.body.errors?.minlength) || (form.controls.body.dirty && form.controls.body.errors?.maxlength)\">Max length: 10000 , Min length: 5</li>\n      </ul>\n    </div>\n  </div>\n\n  <button style=\"margin:5px;\" [disabled]=\"processing\" type=\"button\" name=\"button\" (click)=\"goBack()\" class=\"btn btn-warning\">Go Back</button>\n  <button style=\"margin:5px;\" [disabled]=\"processing || !form.valid\" type=\"submit\" name=\"button\" class=\"btn btn-success\">Submit</button>\n\n</form>\n\n<div *ngIf=\"!newPost\">\n  <div class=\"panel panel-primary\" *ngFor=\"let blog of blogPosts\">\n    <div class=\"panel-heading\">\n      <h3 class=\"panel-title\">{{ blog.title }}</h3>\n    </div>\n\n    <div class=\"panel-body\">\n      {{ blog.body }}\n    </div>\n\n    <div class=\"panel-footer\">\n      <strong>Posted by: </strong>{{ blog.createdBy }}\n      <br />\n      <strong>Date: </strong>{{ blog.createdAt | date:'MMM dd, yyyy' }}\n      <br />\n      <div *ngIf=\"username === blog.createdBy\">\n        <strong>Likes: </strong>{{ blog.likes }}\n        <br />\n        <strong>Dislikes: </strong>{{ blog.dislikes }}\n      </div>\n\n      <a [routerLink]=\"['/edit-blog/', blog._id]\" *ngIf=\"username === blog.createdBy\"><button style=\"margin:5px;\" type=\"button\" name=\"button\" class=\"btn btn-sm btn-info\">Edit</button></a>\n      <a [routerLink]=\"['/delete-blog/', blog._id]\" *ngIf=\"username === blog.createdBy\"><button style=\"margin:5px;\" type=\"button\" name=\"button\" class=\"btn btn-sm btn-danger\">Delete</button></a>\n\n      <div class=\"dropdown\">\n        <button style=\"margin:5px;\" [disabled]=\"blog.likedBy.indexOf(username) > -1\" type=\"button\" name=\"button\" class=\"btn btn-sm btn-success\" *ngIf=\"username !== blog.createdBy\" (click)=\"likeBlog(blog._id)\"><span class=\"glyphicon glyphicon-thumbs-up\">&nbsp;</span>Likes: {{ blog.likes }}</button>\n        <div class=\"dropdown-content\">\n          <a [routerLink]=\"['/user/', liker]\" *ngFor=\"let liker of blog.likedBy\">{{ liker }}</a>\n        </div>\n      </div>\n\n      <div class=\"dropdown\">\n        <button style=\"margin:5px;\" [disabled]=\"blog.dislikedBy.indexOf(username) > -1\" type=\"button\" name=\"button\" class=\"btn btn-sm btn-warning\" *ngIf=\"username !== blog.createdBy\" (click)=\"dislikeBlog(blog._id)\"><span class=\"glyphicon glyphicon-thumbs-down\">&nbsp;</span>Dislikes: {{ blog.dislikes }}</button>\n        <div class=\"dropdown-content\">\n          <a [routerLink]=\"['/user/', disliker]\" *ngFor=\"let disliker of blog.dislikedBy\">{{ disliker }}</a>\n        </div>\n      </div>\n\n    </div>\n\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\">\n          \n        <button style=\"margin:5px;\" type=\"button\" name=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"draftComment(blog._id)\" [disabled]=\"newComment.indexOf(blog._id) > -1\">Post Comment</button>\n        <br />\n        <br />\n        <div *ngIf=\"newComment.indexOf(blog._id) > -1\">\n\n            \n          <form [formGroup]=\"commentForm\">\n              \n            <textarea name=\"comment\" rows=\"10\" cols=\"30\" class=\"form-control\" formControlName=\"comment\" [ngClass]=\"{'is-valid': !commentForm.controls.comment.errors && commentForm.controls.comment.dirty, 'is-invalid': commentForm.controls.comment.dirty && commentForm.controls.comment.errors}\"></textarea>\n            <div >\n              <ul class=\"help-block\">\n                <li *ngIf=\"commentForm.controls.comment.errors?.required && commentForm.controls.comment.dirty\">This field is required.</li>\n                <li *ngIf=\"(commentForm.controls.comment.errors?.maxlength && commentForm.controls.comment.dirty) ||(commentForm.controls.comment.errors?.minlength && commentForm.controls.comment.dirty)\">Comment must be at least 1 character but no more than 200.</li>\n              </ul>\n            </div>\n            <button style=\"margin:5px;\" [disabled]=\"!commentForm.valid || processing\" type=\"submit\" name=\"button\" class=\"btn btn-sm btn-info\" (click)=\"postComment(blog._id)\">Post</button>\n            <button style=\"margin:5px;\" [disabled]=\"processing\" type=\"button\" name=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"cancelSubmission(blog._id)\">Cancel</button>\n          </form>\n\n        </div>\n\n        <li *ngIf=\"enabledComments.indexOf(blog._id) === -1 && blog.comments.length > 0\" class=\"list-group-item\">\n          <span (click)=\"expand(blog._id)\">\n            Show comments&nbsp;&nbsp;\n            <div class=\"glyphicon glyphicon-comment\"></div>\n          </span>\n        </li>\n\n        <li *ngIf=\"enabledComments.indexOf(blog._id) > -1\" class=\"list-group-item\">\n          <span (click)=\"collapse(blog._id)\">\n            Hide Comments&nbsp;&nbsp;\n            <div class=\"glyphicon glyphicon-comment\"></div>\n          </span>\n        </li>\n\n        <div *ngIf=\"enabledComments.indexOf(blog._id) > -1\">\n          <li *ngFor=\"let comment of blog.comments\" class=\"list-group-item\">\n            <strong>{{ comment.commentator }}:</strong> {{ comment.comment }}\n          </li>\n        </div>\n    </ul>\n\n  </div>\n</div>\n\n</body></html>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { BlogService } from '../../../services/blog.service';\nimport { from } from 'rxjs';\nimport{ActivatedRoute,Router} from '@angular/router';\n\n@Component({\n  selector: 'app-delete-blog',\n  templateUrl: './delete-blog.component.html',\n  styleUrls: ['./delete-blog.component.css']\n})\nexport class DeleteBlogComponent implements OnInit {\n  message;\n  messageClass;\n  foundBlog=false;\n  processing=false;\n  blog;\n  currentUrl;\n\n  constructor(private blogService:BlogService,private activatedRoute:ActivatedRoute,private router:Router) { }\n  deleteBlog(){\n    this.processing=true;\n    this.blogService.deleteBlog(this.currentUrl.id).subscribe((data:any)=>{\n      if(!data.success){\n        this.messageClass='alert alert-danger';\n        this.message=data.message;\n      }\n      else{\n        this.messageClass='alert alert-success';\n        this.message=data.message;\n        setTimeout(() => {\n          this.router.navigate(['/blog']);\n        }, 2000);\n      }\n\n    });\n\n  }\n\n  ngOnInit(){\n    this.currentUrl=this.activatedRoute.snapshot.params;\n    this.blogService.getSingleBlog(this.currentUrl.id).subscribe((data:any)=>{\n      if(!data.success){\n        this.messageClass='alert alert-danger';\n        this.message=data.message;\n      }\n      else{\n        this.blog={\n          title:data.blog.title,\n          body:data.blog.body,\n          createdBy:data.blog.createdBy,\n          createdAt:data.blog.createdAt,\n        }\n        this.foundBlog=true;\n      }\n    })\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n</head>\n<style>\n    .mydiv{\n    width:100%;\n    margin: auto 0;\n    }\n   </style>\n<body>\n    <h1 class=\"page-header\">Delete Blog</h1>\n    <div class=\"row show-hide-message\" *ngIf=\"message\">\n        <div [ngClass]=\"messageClass\" class=\"mydiv\">\n            {{ message }}\n        </div>\n    </div>\n    <br>\n\n    <div class=\"col-md-6\" *ngIf=\"foundBlog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h4 class=\"modal-title\">Confirm</h4>\n            <button routerLink=\"/blog\" type=\"button\" name=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n            \n          </div>\n      \n          <div class=\"modal-body\">\n            <p>Are you sure you would like to delete this blog?</p>\n          </div>\n      \n\n          <div class=\"modal-footer\">\n            <button style=\"margin:5px;\" [disabled]=\"processing\" type=\"button\" name=\"button\" class=\"btn btn-success\" (click)=\"deleteBlog()\">Yes</button>\n            <a routerLink=\"/blog\"><button style=\"margin:5px;\" [disabled]=\"processing\" type=\"button\" name=\"button\" class=\"btn btn-danger\">No</button></a>\n          </div>\n        </div>\n      \n        <br />\n      \n\n        <div class=\"panel panel-primary\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">{{ blog.title }}</h3>\n          </div>\n\n          <div class=\"panel-body\">\n            {{ blog.body }}\n          </div>\n      \n          <div class=\"panel-footer\">\n            <strong>Posted by: </strong> {{ blog.createdBy }}\n            <br />\n            <strong>Date: </strong> {{ blog.createdAt | date:'MMM dd, yyyy' }}\n          </div>\n        </div>\n      \n      </div>\n\n\n\n\n\n\n</body></html>","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport {ActivatedRoute} from'@angular/router';\nimport {BlogService} from '../../../services/blog.service';\nimport { Router } from '@angular/router'\nimport { from } from 'rxjs';\n\n@Component({\n  selector: 'app-edit-blog',\n  templateUrl: './edit-blog.component.html',\n  styleUrls: ['./edit-blog.component.css']\n})\nexport class EditBlogComponent implements OnInit {\n  message;\n  messageClass;\n  blog={\n    title:String,\n    body:String\n  };\n  processing =false;\n  currentUrl;\n  loading=true;\n\n  constructor(\n    private location:Location,\n    private activatedRoute:ActivatedRoute,\n    private blogService:BlogService,\n    private router:Router\n  ) { }\n\n  updateBlogSubmit(){\n    this.processing=true;\n    this.blogService.editBlog(this.blog).subscribe((data:any)=>{\n      if(!data.success){\n        this.messageClass='alert alert-danger';\n        this.message=data.message;\n        this.processing=false;\n      }\n      else{\n        this.messageClass='alert alert-success';\n        this.message=data.message;\n        setTimeout(() => {\n          this.router.navigate(['/blog']);  \n        }, 2000);\n      }\n    })\n\n  }\n  goBack(){\n    this.location.back();\n  }\n\n  ngOnInit() {\n    this.currentUrl=this.activatedRoute.snapshot.params;\n    this.blogService.getSingleBlog(this.currentUrl.id).subscribe((data:any)=>{\n      if(!data.success){\n        this.messageClass='alert alert-danger';\n        this.message=data.message;\n      }\n      else{\n        this.blog=data.blog;\n        this.loading=false;\n      }\n    });\n\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n</head>\n<style>\n    .mydiv{\n    width:100%;\n    margin: auto 0;\n    }\n   </style>\n<body>\n\n\n\n    <h1 class=\"page-header\">Edit Blog</h1>\n\n\n    <div class=\"row show-hide-message\" *ngIf=\"message\">\n        <div [ngClass]=\"messageClass\" class=\"mydiv\">\n            {{ message }}\n        </div>\n    </div>\n\n    <form (submit)=\"updateBlogSubmit()\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n            <label for=\"title\">Title</label>\n            <input [disabled]=\"processing\" type=\"text\" name=\"title\" placeholder=\"*Title\" autocomplete=\"off\" class=\"form-control\" [(ngModel)]=\"blog.title\"/>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"body\">Body</label>\n            <textarea type=\"text\" name=\"body\" placeholder=\"*Title\" rows=\"8\" cols=\"80\" class=\"form-control\" [(ngModel)]=\"blog.body\"></textarea>\n            <button style=\"margin:5px;\" [disabled]=\"processing\" type=\"button\" name=\"button\" class=\"btn btn-success\" (click)=\"goBack()\">Go back</button>\n            <button style=\"margin:5px;\" [disabled]=\"processing\" type=\"submit\" name=\"save\" class=\"btn btn-info\">Save Changes</button>\n        </div>\n    </form>\n\n\n\n\n\n\n\n</body></html>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n</head>\n<style>\n  h1 {text-align: center;}\n  h2 {text-align: center;}\n  h3 {text-align: center;}\n  p {text-align: center;}\n  .center {\n  text-align: center;\n  border: 3px solid green;\n}\n  </style>\n<body>\n  <h1 class=\"page-header\"> <b> Welcome to WeBlog </b></h1> <br>\n  <h2>WeBlog is an application developed by Mohit Sharma.</h2>\n  <h2>The technologies used here are :</h2>\n  \n  <div class=\"row\">\n    <div class=\"col-sm-6 col-md-3\">\n      <div class=\"thumbnail\">\n        <img src=\"https://image.flaticon.com/icons/svg/417/417745.svg\" alt=\"placeholder image\" width=\"140\" height=\"140\">\n        <div class=\"caption\">\n          <h3>MongoDB</h3>\n          <p>MongoDB is a free and open-source cross-platform document-oriented database program. This NoSQL database program uses JSON-like documents with schemas.</p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-sm-6 col-md-3\">\n      <div class=thumbnail> <img src=\"https://image.flaticon.com/icons/svg/417/417746.svg\" alt=\"Generic placeholder image\" width=\"140\" height=\"140\">\n        <div class=caption>\n          <h3>ExpressJS</h3>\n          <p>Express.js is a Node.js framework. Node.js is a platform that allows JavaScript to be used outside the Web Browsers, for creating web and network applications.</p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-sm-6 col-md-3\">\n      <div class=thumbnail> <img src=\"https://image.flaticon.com/icons/svg/417/417751.svg\" alt=\"Generic placeholder image\" width=\"140\" height=\"140\">\n        <div class=caption>\n          <h3>Angular 8</h3>\n          <p>Angular 8 is a client-side TypeScript based framework which is used to create dynamic web applications. It is very similar to its previous versions having extensive features.</p>\n        </div>\n      </div>\n    </div>\n\n     \n   <div class=\"col-sm-6 col-md-3\">\n      <div class=thumbnail> <img src=\"https://image.flaticon.com/icons/svg/417/417754.svg\" alt=\"Generic placeholder image\" width=\"140\" height=\"140\">\n        <div class=caption>\n          <h3>NodeJS</h3>\n          <p>Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.</p>\n        </div>\n      </div>\n    </div>\n\n\n  </div>\n\n\n</body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(public authService:AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n</head>\n<body>\n<br>\n<br>\n<br>\n<br>\n\n<div class=\"jumbotron text-center\">\n    <h1>Welcome to WeBlog</h1>\n    \n    <p class=\"lead\">A MEAN Stack Application by <strong>Mohit Sharma</strong></p>\n    <div>\n      <a *ngIf=\"!authService.loggedIn()\" routerLink=\"/register\" class=\"btn btn-primary\" style=\"margin:5px;\" >Register</a>\n      <a *ngIf=\"!authService.loggedIn()\" routerLink=\"/login\"  class=\"btn btn-default\"style=\"margin:5px;\" >Login</a>\n      <a *ngIf=\"authService.loggedIn()\" routerLink=\"/blog\"  class=\"btn btn-success\" style=\"margin:5px;\">View Blogs</a>\n    </div>\n  </div>\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport{Router} from '@angular/router';\nimport { from } from 'rxjs';\nimport {AuthGuard} from'../../auth/auth.guard';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  messageClass;\n  message;\n  processing=false;\n  form:FormGroup;\n  previousUrl;\n\n  constructor(\n    private formBuilder:FormBuilder,\n    private authService:AuthService,\n    private router:Router,\n    private authGuard:AuthGuard\n  ) {\n    this.createForm();\n   }\n\n  createForm(){\n    this.form=this.formBuilder.group({\n      username:['',Validators.required],\n      password:['',Validators.required]\n    });\n  }\n\n  enableForm(){\n    this.form.controls['username'].enable();\n    this.form.controls['password'].enable();\n  }\n\n  disableForm(){\n    this.form.controls['username'].disable();\n    this.form.controls['password'].disable();\n  }\n  \n  onLoginSubmit(){\n    this.processing=true;\n    this.disableForm();\n    const user={\n      username:this.form.get('username').value,\n      password:this.form.get('password').value\n    }\n    this.authService.login(user).subscribe((data:any)=>{\n      if(!data.success){\n        this.messageClass='alert alert-danger';\n        this.message=data.message;\n        this.processing=false;\n        this.enableForm();\n      }\n      else{\n        this.messageClass='alert alert-success';\n        this.message=data.message;\n        this.authService.storeUserData(data.token,data.user);\n        setTimeout(() => {\n          if(this.previousUrl){\n            this.router.navigate([this.previousUrl]);\n          }\n          else{\n            this.router.navigate(['/dashboard']);\n          }\n        }, 2000);\n      }\n    })\n  }\n\n  ngOnInit() {\n    if(this.authGuard.redirectUrl){\n      this.messageClass='alert alert-danger';\n      this.message='You must be logged in to the web page!';\n      this.previousUrl=this.authGuard.redirectUrl;\n      this.authGuard.redirectUrl=undefined;\n    }\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n</head>\n<style>\n    .mydiv{\n    width:100%;\n    margin: auto 0;\n    }\n   </style>\n<body>\n\n\n\n\n<br><h1 class=\"page-header\">Login Here</h1><br>\n<div class=\"row show-hide-message\">\n    <div [ngClass]=\"messageClass\" class=\"mydiv\">\n        {{message}}\n    </div>\n</div>\n\n<form [formGroup]=\"form\" (submit)=\"onLoginSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <div>\n            <input type=\"text\" name=\"username\" class=\"form-control\" autocomplete=\"off\" placeholder=\"*Username\" formControlName=\"username\" [ngClass]=\"{ 'is-invalid': form.controls.username.errors && form.controls.username.dirty, 'is-valid': form.controls.username.valid && form.controls.username.dirty}\"/>\n            <ul class=\"help-block\">\n                <li *ngIf=\"form.controls.username.errors?.required && form.controls.username.dirty\">This field is required</li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <div>\n            <input type=\"password\" name=\"password\" class=\"form-control\" autocomplete=\"off\" placeholder=\"*Password\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': form.controls.password.errors && form.controls.password.dirty, 'is-valid': form.controls.password.valid && form.controls.password.dirty}\"/>\n            <ul class=\"help-block\">\n                <li *ngIf=\"form.controls.password.errors?.required && form.controls.password.dirty\">This field is required</li>\n            </ul>\n        </div>\n    </div>\n    <input [disabled]=\"!form.valid || processing\" type=\"submit\" class=\"btn btn-primary\" value=\"Login\"/>\n</form>\n\n</body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport { from } from 'rxjs';\nimport {Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public authService:AuthService,private router:Router) { }\n\n  onLogoutClick(){\n    this.authService.logOut();\n    \n    this.router.navigate(['/']);\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<style>\n  body {\n    margin: 0;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n  \n  .topnav {\n    overflow: hidden;\n    background-color: #333;\n  }\n  \n  .topnav a {\n    float: left;\n    color: #f2f2f2;\n    text-align: center;\n    padding: 14px 16px;\n    text-decoration: none;\n    font-size: 17px;\n  }\n  \n  .topnav a:hover {\n    background-color: #ddd;\n    color: black;\n  }\n  \n  .topnav a.active {\n    background-color: #4CAF50;\n    color: white;\n  }\n  \n  .topnav-right {\n    float: right;\n  }\n  </style>\n\n<div class=\"topnav\">\n  <a class=\"navbar-brand\" >WeBlog</a>\n  <a  routerLink=\"/home\">Home</a>\n  <div class=\"topnav-right\">\n    <a routerLink=\"/dashboard\" *ngIf=\"authService.loggedIn()\">DashBoard</a>\n    <a routerLink=\"/profile\" *ngIf=\"authService.loggedIn()\">Profile</a>\n    <a routerLink=\"/blog\" *ngIf=\"authService.loggedIn()\">Blog</a>\n    <a routerLink=\"/login\" *ngIf=\"!authService.loggedIn()\">Login</a>\n    <a routerLink=\"/home\" (click)=\"onLogoutClick()\" *ngIf=\"authService.loggedIn()\" >Logout</a>\n    <a routerLink=\"/register\" *ngIf=\"!authService.loggedIn()\">Register</a>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  username;\n  email;\n\n  constructor(\n    private authService:AuthService\n  ) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe((profile:any)=>{\n      this.username=profile.user.username;\n      this.email=profile.user.email;\n      \n    });\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n</head>\n<body>\n\n\n\n\n\n<div class=\"page-header\"><h1>Profile Page</h1></div>\n\n\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\">Username: {{ username }}</li>\n    <li class=\"list-group-item\">Email: {{ email }}</li>\n</ul> \n\n\n\n\n</body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport {AuthService } from '../../services/auth.service';\nimport {ActivatedRoute,Router} from '@angular/router'\nimport { from } from 'rxjs';\n\n@Component({\n  selector: 'app-public-profile',\n  templateUrl: './public-profile.component.html',\n  styleUrls: ['./public-profile.component.css']\n})\nexport class PublicProfileComponent implements OnInit {\n  currentUrl;\n  username;\n  email;\n  foundProfile=false;\n  message;\n  messageClass;\n\n  constructor(\n    private authService:AuthService,\n    private activatedRoute:ActivatedRoute,\n    private router:Router\n  ) { }\n\n  ngOnInit(){\n    this.currentUrl=this.activatedRoute.snapshot.params;\n    this.authService.getPublicProfile(this.currentUrl.username).subscribe((data:any)=>{\n      if(!data.success){\n        this.messageClass='alert alert-danger';\n        this.message=data.message;\n      }\n      else{\n      this.username=data.user.username;\n      this.email=data.user.email;\n      }\n    });\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n</head>\n<style>\n    .mydiv{\n    width:100%;\n    margin: auto 0;\n    }\n   </style>\n<body>\n\n<h1 class=\"page-header\">Public Profile</h1>\n<ul class=\"list-group\">\n  <li class=\"list-group-item\"><strong>Username: </strong>{{ username }}</li>\n  <li class=\"list-group-item\"><strong>E-Mail: </strong>{{ email }}</li>\n</ul>\n\n\n\n\n\n\n\n</body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from'@angular/router';\nimport { from } from 'rxjs';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form:FormGroup;\n  formControlName:FormControl;\n  message;\n  messageClass;\n  processing=false;\n  usernameValid;\n  usernameMessage;\n  emailValid;\n  emailMessage;\n\n  constructor(\n    private formBuilder:FormBuilder,\n    private authService:AuthService,\n    private router:Router\n  ) {\n    this.createForm()\n   }\n\n  createForm(){\n    this.form=this.formBuilder.group({\n      email:['',Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(40),\n        this.validateEmail   \n      ])],\n      username:['',Validators.compose([\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(15),\n        this.validateUsername   \n      ])],\n      password:['',Validators.compose([\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(35),\n        this.validatePassword   \n      ])],\n      confirmpassword:['',Validators.required]\n    },{validator: this.matchingPasswords('password','confirmpassword')})\n  }\n\n  disableForm(){\n    this.form.controls['email'].disable();\n    this.form.controls['username'].disable();\n    this.form.controls['password'].disable();\n    this.form.controls['confirmpassword'].disable();\n  }\n\n  enableForm(){\n    this.form.controls['email'].enable();\n    this.form.controls['username'].enable();\n    this.form.controls['password'].enable();\n    this.form.controls['confirmpassword'].enable();\n  }\n\n  validateEmail(controls) {\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validateEmail': true }\n    }\n  }\n\n  validateUsername(controls) {\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validateUsername': true }\n    }\n  }\n\n  validatePassword(controls) {\n    const regExp = new RegExp(/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[\\d])(?=.*?[\\W]).{8,35}$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validatePassword': true }\n    }\n  }\n\n  matchingPasswords(password,confirmpassword){\n    return (group:FormGroup)=>{\n      if(group.controls[password].value===group.controls[confirmpassword].value){\n        return null;\n      }\n      else{\n        return {'matchingPasswords':true}\n      }\n    }\n  }\n \n  onRegisterSubmit(){\n    this.processing=true;\n    this.disableForm();\n    const user={\n      email:this.form.get('email').value,\n      username:this.form.get('username').value,\n      password:this.form.get('password').value\n    }\n    this.authService.registerUser(user).subscribe((data:any)=>{\n      if(!data.success){\n        this.messageClass='alert alert-danger';\n        this.message=data.message;\n        this.processing=false;\n        this.enableForm();\n      }\n      else{\n        this.messageClass='alert alert-success';\n        this.message=data.message;\n        setTimeout(() => {\n          this.router.navigate(['/login']);\n        }, 2000);\n      }\n      console.log(data);\n    });\n  }\n\n  checkUsername(){\n    this.authService.checkUsername(this.form.get('username').value).subscribe((data:any)=>{\n      if(!data.success){\n        this.usernameValid=false;\n        this.usernameMessage=data.message;\n      }\n      else{        \n        this.usernameValid=true;\n        this.usernameMessage=data.message;\n      }\n    });\n  }\n\n  checkEmail(){\n    this.authService.checkEmail(this.form.get('email').value).subscribe((data:any)=>{\n      if(!data.success){\n        this.emailValid=false;\n        this.emailMessage=data.message;\n      }\n      else{        \n        this.emailValid=true;\n        this.emailMessage=data.message;\n      }\n    });\n  }\n\n \n\n  ngOnInit(): void {\n  }\n\n}\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n</head>\r\n<style>\r\n    .mydiv{\r\n    width:100%;\r\n    margin: auto 0;\r\n    }\r\n   </style>\r\n<body>\r\n\r\n\r\n<br><h1 class=\"page-header\">Register Page</h1><br>\r\n<div class=\"row show-hide-message\">\r\n    <div [ngClass]=\"messageClass\" class=\"mydiv\">\r\n        {{message}}\r\n    </div>\r\n</div>\r\n\r\n<form [formGroup]=\"form\" (submit)=\"onRegisterSubmit()\">\r\n    <div class=\"form-group\">\r\n        <label for=\"username\"><b>Username</b></label>\r\n        <div>\r\n            <input type=\"text\" name=\"username\" class=\"form-control\" autocomplete=\"off\" placeholder=\"*Username\" formControlName=\"username\" [ngClass]=\"{ 'is-invalid': (form.controls.username.errors && form.controls.username.dirty) || (!usernameValid && form.controls.username.dirty), 'is-valid': !form.controls.username.errors && usernameValid}\" (blur)=\"checkUsername()\"/>\r\n            <ul class=\"help-block\">\r\n                <li *ngIf=\"form.controls.username.errors?.required && form.controls.username.dirty\">This field is required</li>\r\n                <li *ngIf=\"form.controls.username.errors?.minlength && form.controls.username.dirty || form.controls.username.errors?.maxlength && form.controls.username.dirty \">Minimum characters: 3, Maximum characters: 15</li>\r\n                <li *ngIf=\"form.controls.username.errors?.validateUsername && form.controls.username.dirty\">Username must not have any special characters</li>\r\n                <li *ngIf=\"usernameMessage\">{{ usernameMessage }}</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"email\"><b>Email</b></label>\r\n        <div>\r\n            <input type=\"text\" name=\"email\" class=\"form-control\" autocomplete=\"off\" placeholder=\"*Email\" formControlName=\"email\"  [ngClass]=\"{'is-invalid': (form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'is-valid': !form.controls.email.errors && emailValid}\"(blur)=\"checkEmail()\"/>\r\n            <ul class=\"help-block\">\r\n                <li *ngIf=\"form.controls.email.errors?.required && form.controls.email.dirty\">This field is required</li>\r\n                <li *ngIf=\"(form.controls.email.errors?.minlength && form.controls.email.dirty || form.controls.email.errors?.maxlength && form.controls.email.dirty ) && form.controls.email.dirty\">Minimum characters: 5, Maximum characters: 40</li>\r\n                <li *ngIf=\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\">This must be a valid e-mail</li>\r\n                <li *ngIf=\"emailMessage\">{{ emailMessage }}</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"password\"><b>Password</b></label>\r\n        <div>\r\n            <input type=\"password\" name=\"password\" class=\"form-control\" autocomplete=\"off\" placeholder=\"*Password\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': (form.controls.password.errors && form.controls.password.dirty), 'is-valid': !form.controls.password.errors}\"/>\r\n            <ul class=\"help-block\">                \r\n                <li *ngIf=\"form.controls.password.errors?.required && form.controls.password.dirty\">This field is required</li>\r\n                <li *ngIf=\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \">Minimum characters: 8, Maximum characters: 35</li>\r\n                <li *ngIf=\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\">Password must be at least 8 characters but no more than 35</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"confirmpassword\"><b>Confirm Password</b></label>\r\n        <div >\r\n            <input type=\"password\" name=\"confirmpassword\" class=\"form-control\" autocomplete=\"off\" placeholder=\"*Confirm Password\" formControlName=\"confirmpassword\" [ngClass]=\"{'is-invalid': (form.controls.confirmpassword.errors && form.controls.confirmpassword.dirty) || (form.errors?.matchingPasswords && form.controls.confirmpassword.dirty), 'is-valid': !form.controls.confirmpassword.errors && !form.errors?.matchingPasswords}\"/>\r\n            <ul class=\"help-block\">\r\n                <li *ngIf=\"form.controls.confirmpassword.errors?.required && form.controls.confirmpassword.dirty\">This field is required</li>\r\n                <li *ngIf=\"form.errors?.matchingPasswords && form.controls.confirmpassword.dirty\">Passwords do not match</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <input [disabled]=\"!form.valid || processing || !emailValid || !usernameValid\" type=\"submit\" class=\"btn btn-primary\" value=\"Submit\"/>\r\n</form>\r\n\r\n\r\n</body>\r\n</html>","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders,HttpRequest} from '@angular/common/http';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  domain=\"http://localhost:8080\";\n  authToken;\n  user;\n  options;\n  helper = new JwtHelperService();\n \n\n  constructor(\n    private http:HttpClient,\n  ) { }\n\n  createAuthenticationHeaders(){\n    this.loadToken();\n    this.options = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'authorization': this.authToken\n      })\n    };\n  }\n\n  loadToken(){\n    const token=localStorage.getItem('token');\n    this.authToken=token;\n  }\n\n\n  registerUser(user){\n    return this.http.post(this.domain+'/authentication/register',user);\n  }\n  checkUsername(username){\n    return this.http.get(this.domain+'/authentication/checkUsername/'+username);\n  }\n  checkEmail(email){\n    return this.http.get(this.domain+'/authentication/checkEmail/'+email);\n  }\n\n\n\n  login(user){\n    return this.http.post(this.domain+'/authentication/login',user)\n  }\n\n  logOut(){\n    this.authToken=null;\n    this.user=null;\n    localStorage.clear();\n    alert(\"You are logged out!\");\n  }\n\n\n  storeUserData(token,user){\n    localStorage.setItem('token',token);\n    localStorage.setItem('user',JSON.stringify(user));\n    this.authToken=token;\n    this.user=user;\n  }\n\n  getProfile(){\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain+'/authentication/profile',this.options);\n  }\n  loggedIn(){\n    return !this.helper.isTokenExpired(localStorage.getItem('token'));\n  }\n\n  getPublicProfile(username) {\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain + '/authentication/publicProfile/' + username, this.options);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {AuthService} from './auth.service';\nimport { HttpClient,HttpHeaders,HttpRequest} from '@angular/common/http';\nimport { BlogComponent} from '../components/blog/blog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n  options;\n  domain=this.authService.domain;\n\n  constructor(\n    private authService:AuthService,\n    private http:HttpClient,\n  ) { }\n\n  createAuthenticationHeaders(){\n    this.authService.loadToken();\n    this.options = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'authorization': this.authService.authToken\n      })\n    };\n  }\n\n  newBlog(blog){\n    this.createAuthenticationHeaders();\n    return this.http.post(this.domain +'/blogs/newBlog', blog ,this.options);\n  }\n\n\n  getAllBlogs(){\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain+'/blogs/allBlogs',this.options);\n  }\n\n  getSingleBlog(id){\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain+'/blogs/singleBlog/'+id,this.options);\n  }\n  editBlog(blog){\n    this.createAuthenticationHeaders();\n    return this.http.put(this.domain+'/blogs/updateBlog/',blog,this.options);\n  }\n  deleteBlog(id){\n    this.createAuthenticationHeaders();\n    return this.http.delete(this.domain+'/blogs/deleteBlog/'+id,this.options);\n  }\n\n   likeBlog(id) {\n    const blogData = { id: id };\n    return this.http.put(this.domain + '/blogs/likeBlog/', blogData, this.options);\n  }\n\n  dislikeBlog(id) {\n    const blogData = { id: id };\n    return this.http.put(this.domain + '/blogs/dislikeBlog/', blogData, this.options);\n  }\n  postComment(id, comment) {\n    this.createAuthenticationHeaders();\n    const blogData = {\n      id: id,\n      comment: comment\n    }\n    return this.http.post(this.domain + '/blogs/comment', blogData, this.options);\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}